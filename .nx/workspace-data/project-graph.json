{
  "nodes": {
    "@khulnasoft/ee-shared-services": {
      "name": "@khulnasoft/ee-shared-services",
      "type": "lib",
      "data": {
        "root": "enterprise/packages/shared-services",
        "sourceRoot": "enterprise/packages/shared-services",
        "name": "@khulnasoft/ee-shared-services",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "prebuild",
              "build",
              "build:main",
              "build:esm",
              "build:watch",
              "fix",
              "fix:prettier",
              "lint:fix",
              "lint",
              "watch:build",
              "watch:test",
              "reset-hard",
              "prepare-release",
              "test-ee"
            ]
          },
          "description": "Generic service used inside of Khulnasoft's different services - can not be depended on application-generic",
          "js": {
            "packageName": "@khulnasoft/ee-shared-services"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "node ./check-ee.mjs",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:main": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:main"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:main"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "tsc -w -p tsconfig.json",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "jest src --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare-release": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare-release"
            },
            "metadata": {
              "scriptContent": "run-s reset-hard test",
              "runCommand": "pnpm run prepare-release"
            },
            "configurations": {},
            "parallelism": true
          },
          "test-ee": {
            "executor": "nx:run-script",
            "options": {
              "script": "test-ee"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file tests/setup.ts src/**/**/*.spec.ts",
              "runCommand": "pnpm run test-ee"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/ee-translation": {
      "name": "@khulnasoft/ee-translation",
      "type": "lib",
      "data": {
        "root": "enterprise/packages/translation",
        "sourceRoot": "enterprise/packages/translation",
        "name": "@khulnasoft/ee-translation",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "build",
              "build:esm",
              "build:watch",
              "test",
              "lint",
              "test-ee"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/ee-translation"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "node ./check-ee.mjs",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "node_modules/.bin/tsc -p tsconfig.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "node_modules/.bin/tsc -w -p tsconfig.json",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo 'skip test in the ci'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src --no-error-on-unmatched-pattern",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test-ee": {
            "executor": "nx:run-script",
            "options": {
              "script": "test-ee"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file tests/setup.ts src/**/**/*.spec.ts",
              "runCommand": "pnpm run test-ee"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/notification-center": {
      "name": "@khulnasoft/notification-center",
      "type": "lib",
      "data": {
        "root": "packages/notification-center",
        "sourceRoot": "packages/notification-center",
        "name": "@khulnasoft/notification-center",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "prebuild",
              "lint",
              "lint:fix",
              "build",
              "build:cjs",
              "build:esm",
              "build:esm:watch",
              "build:umd",
              "build:types",
              "build:watch",
              "storybook",
              "build-storybook",
              "test"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/notification-center"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run build:cjs && npm run build:esm && npm run build:umd && npm run build:types",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:cjs": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.json",
              "runCommand": "pnpm run build:cjs"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.esm.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:esm:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.esm.json -w --preserveWatchOutput",
              "runCommand": "pnpm run build:esm:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:umd": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:umd"
            },
            "metadata": {
              "scriptContent": "webpack --config webpack.config.js",
              "runCommand": "pnpm run build:umd"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:types": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:types"
            },
            "metadata": {
              "scriptContent": "tsc --declaration --emitDeclarationOnly --declarationMap --declarationDir dist/types -p tsconfig.json",
              "runCommand": "pnpm run build:types"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "npm run build:esm:watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "storybook"
            },
            "metadata": {
              "scriptContent": "storybook dev -p 6006",
              "runCommand": "pnpm run storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "build-storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "build-storybook"
            },
            "metadata": {
              "scriptContent": "storybook build",
              "runCommand": "pnpm run build-storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "jest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/ee-billing": {
      "name": "@khulnasoft/ee-billing",
      "type": "lib",
      "data": {
        "root": "enterprise/packages/billing",
        "sourceRoot": "enterprise/packages/billing",
        "name": "@khulnasoft/ee-billing",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "build",
              "build:esm",
              "build:watch",
              "test",
              "lint",
              "test-ee",
              "start:proxy"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/ee-billing"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "node ./check-ee.mjs",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "node_modules/.bin/tsc -p tsconfig.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "node_modules/.bin/tsc -w -p tsconfig.json",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo 'skip test in the ci'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src --no-error-on-unmatched-pattern",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test-ee": {
            "executor": "nx:run-script",
            "options": {
              "script": "test-ee"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file tests/setup.ts src/**/**/*.spec.ts",
              "runCommand": "pnpm run test-ee"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:proxy": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:proxy"
            },
            "metadata": {
              "scriptContent": "ngrok http http://localhost:3000",
              "runCommand": "pnpm run start:proxy"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@repo/typescript-config": {
      "name": "@repo/typescript-config",
      "type": "lib",
      "data": {
        "root": "packages/typescript-config",
        "sourceRoot": "packages/typescript-config",
        "name": "@repo/typescript-config",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@repo/typescript-config"
          }
        },
        "targets": {},
        "implicitDependencies": []
      }
    },
    "@khulnasoft/application-generic": {
      "name": "@khulnasoft/application-generic",
      "type": "lib",
      "data": {
        "root": "libs/application-generic",
        "sourceRoot": "libs/application-generic",
        "name": "@khulnasoft/application-generic",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "prebuild",
              "build",
              "build:main",
              "build:copy-template",
              "fix",
              "fix:prettier",
              "lint:fix",
              "lint",
              "watch:build",
              "watch:test",
              "reset-hard"
            ]
          },
          "description": "Generic backend code used inside of Khulnasoft's different services",
          "js": {
            "packageName": "@khulnasoft/application-generic"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run watch:build",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "run-p build:*",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:main": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:main"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:main"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:copy-template": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:copy-template"
            },
            "metadata": {
              "scriptContent": "cpx \"src/**/*.handlebars\" build/main",
              "runCommand": "pnpm run build:copy-template"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "jest src --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/ee-auth": {
      "name": "@khulnasoft/ee-auth",
      "type": "lib",
      "data": {
        "root": "enterprise/packages/auth",
        "sourceRoot": "enterprise/packages/auth",
        "name": "@khulnasoft/ee-auth",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "build",
              "build:esm",
              "build:watch",
              "lint",
              "test",
              "test-ee"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/ee-auth"
          }
        },
        "targets": {
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "node ./check-ee.mjs",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "node_modules/.bin/tsc -p tsconfig.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "node_modules/.bin/tsc -w -p tsconfig.json",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src --no-error-on-unmatched-pattern",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo 'skip test in the ci'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test-ee": {
            "executor": "nx:run-script",
            "options": {
              "script": "test-ee"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file tests/setup.ts src/**/**/*.spec.ts",
              "runCommand": "pnpm run test-ee"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/ee-dal": {
      "name": "@khulnasoft/ee-dal",
      "type": "lib",
      "data": {
        "root": "enterprise/packages/dal",
        "sourceRoot": "enterprise/packages/dal",
        "name": "@khulnasoft/ee-dal",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "afterinstall",
              "prebuild",
              "build",
              "build:esm",
              "build:watch",
              "precommit",
              "test",
              "lint"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/ee-dal"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "afterinstall": {
            "executor": "nx:run-script",
            "options": {
              "script": "afterinstall"
            },
            "metadata": {
              "scriptContent": "pnpm build",
              "runCommand": "pnpm run afterinstall"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "node ./check-ee.mjs",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json -w --preserveWatchOutput",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo 'skip test in the ci'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "echo 'skip lint in the ci'",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@repo/eslint-config": {
      "name": "@repo/eslint-config",
      "type": "lib",
      "data": {
        "root": "packages/eslint-config",
        "sourceRoot": "packages/eslint-config",
        "name": "@repo/eslint-config",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@repo/eslint-config",
            "packageExports": {
              "./base": "./base.js",
              "./next-js": "./next.js",
              "./react-internal": "./react-internal.js"
            }
          }
        },
        "targets": {},
        "implicitDependencies": []
      }
    },
    "@khulnasoft/react-native": {
      "name": "@khulnasoft/react-native",
      "type": "lib",
      "data": {
        "root": "packages/react-native",
        "sourceRoot": "packages/react-native",
        "name": "@khulnasoft/react-native",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "build:watch",
              "build",
              "lint",
              "check:exports",
              "release:preview"
            ]
          },
          "description": "Khulnasoft's React Native SDK for building custom inbox notification experiences",
          "js": {
            "packageName": "@khulnasoft/react-native",
            "packageExports": {
              ".": {
                "import": {
                  "types": "./dist/client/index.d.mts",
                  "default": "./dist/client/index.mjs"
                },
                "require": {
                  "types": "./dist/client/index.d.ts",
                  "default": "./dist/client/index.js"
                }
              }
            }
          }
        },
        "targets": {
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "tsup --watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsup && pnpm run check:exports",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "check:exports": {
            "executor": "nx:run-script",
            "options": {
              "script": "check:exports"
            },
            "metadata": {
              "scriptContent": "attw --pack .",
              "runCommand": "pnpm run check:exports"
            },
            "configurations": {},
            "parallelism": true
          },
          "release:preview": {
            "executor": "nx:run-script",
            "options": {
              "script": "release:preview"
            },
            "metadata": {
              "scriptContent": "pnpx pkg-pr-new publish",
              "runCommand": "pnpm run release:preview"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/ntfr-client": {
      "name": "@khulnasoft/ntfr-client",
      "type": "lib",
      "data": {
        "root": "packages/ntfr-client",
        "sourceRoot": "packages/ntfr-client",
        "name": "@khulnasoft/ntfr-client",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "clean",
              "build",
              "build:tsup",
              "typecheck",
              "dima"
            ]
          },
          "description": "ntfr.dev client",
          "js": {
            "packageName": "@khulnasoft/ntfr-client",
            "packageExports": {
              ".": {
                "import": {
                  "types": "./dist/index.d.mts",
                  "default": "./dist/index.mjs"
                },
                "require": "./dist/index.js",
                "types": "./dist/index.d.ts"
              },
              "./package.json": "./package.json"
            }
          }
        },
        "targets": {
          "clean": {
            "executor": "nx:run-script",
            "options": {
              "script": "clean"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run clean"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run clean && npm run build:tsup",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:tsup": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:tsup"
            },
            "metadata": {
              "scriptContent": "tsup --dts-resolve",
              "runCommand": "pnpm run build:tsup"
            },
            "configurations": {},
            "parallelism": true
          },
          "typecheck": {
            "executor": "nx:run-script",
            "options": {
              "script": "typecheck"
            },
            "metadata": {
              "scriptContent": "tsc --noEmit",
              "runCommand": "pnpm run typecheck"
            },
            "configurations": {},
            "parallelism": true
          },
          "dima": {
            "executor": "nx:run-script",
            "options": {
              "script": "dima"
            },
            "metadata": {
              "scriptContent": "ts-node src/dima.ts",
              "runCommand": "pnpm run dima"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "khulnasoft": {
      "name": "khulnasoft",
      "type": "lib",
      "data": {
        "root": "packages/khulnasoft",
        "sourceRoot": "packages/khulnasoft",
        "name": "khulnasoft",
        "tags": [
          "npm:public",
          "npm:khulnasoft",
          "npm:cli",
          "npm:khulnasoft-cli",
          "npm:cloud",
          "npm:sync",
          "npm:studio",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "build:prod",
              "format",
              "precommit",
              "start",
              "test",
              "test:watch",
              "lint",
              "lint:fix",
              "start:dev",
              "start:mode",
              "start:dev:mode",
              "start:init:mode",
              "start:sync:mode",
              "start:test",
              "start:debug",
              "start:prod",
              "print:project-path"
            ]
          },
          "description": "Khulnasoft CLI. Run Khulnasoft Studio and sync workflows with Khulnasoft Cloud",
          "js": {
            "packageName": "khulnasoft"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "pnpm prebuild && tsc -p tsconfig.json && cp -r src/commands/init/templates/app* dist/src/commands/init/templates && cp -r src/commands/init/templates/github dist/src/commands/init/templates",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:prod"
            },
            "metadata": {
              "scriptContent": "pnpm prebuild && pnpm build",
              "runCommand": "pnpm run build:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --write \"src/**/*.ts\"",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "pnpm start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "vitest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "vitest --watch",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=dev KHULNASOFT_EMBED_PATH=http://127.0.0.1:4701/embed.umd.min.js KHULNASOFT_API_ADDRESS=http://127.0.0.1:3000 KHULNASOFT_CLIENT_LOGIN=http://127.0.0.1:4200/auth/login CLI_SEGMENT_WRITE_KEY=GdQ594CEBj4pU6RFldDOjKJwZjxZOsIj nodemon init",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:mode": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:mode"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=dev CLI_SEGMENT_WRITE_KEY=GdQ594CEBj4pU6RFldDOjKJwZjxZOsIj nodemon",
              "runCommand": "pnpm run start:mode"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev:mode": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev:mode"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=dev CLI_SEGMENT_WRITE_KEY=GdQ594CEBj4pU6RFldDOjKJwZjxZOsIj nodemon dev --dashboard-url http://localhost:4200",
              "runCommand": "pnpm run start:dev:mode"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:init:mode": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:init:mode"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=dev nodemon init",
              "runCommand": "pnpm run start:init:mode"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:sync:mode": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:sync:mode"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=dev CLI_SEGMENT_WRITE_KEY=GdQ594CEBj4pU6RFldDOjKJwZjxZOsIj nodemon sync",
              "runCommand": "pnpm run start:sync:mode"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test PORT=1336 nodemon init",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:debug"
            },
            "metadata": {
              "scriptContent": "cross-env nodemon --config nodemon-debug.json",
              "runCommand": "pnpm run start:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:prod"
            },
            "metadata": {
              "scriptContent": "cross-env node dist/src/index.js",
              "runCommand": "pnpm run start:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "print:project-path": {
            "executor": "nx:run-script",
            "options": {
              "script": "print:project-path"
            },
            "metadata": {
              "scriptContent": "echo \"$PWD\" | sed 's|.*/khulnasoft/||'",
              "runCommand": "pnpm run print:project-path"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/design-system": {
      "name": "@khulnasoft/design-system",
      "type": "lib",
      "data": {
        "root": "libs/design-system",
        "sourceRoot": "libs/design-system",
        "name": "@khulnasoft/design-system",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "prebuild",
              "lint",
              "build",
              "build:cjs",
              "build:cjs:watch",
              "build:watch",
              "build:esm",
              "build:esm:watch",
              "build:types",
              "storybook",
              "build-storybook",
              "test"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/design-system"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run build:cjs && npm run build:esm && npm run build:types",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:cjs": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.json",
              "runCommand": "pnpm run build:cjs"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:cjs:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -w -p tsconfig.json",
              "runCommand": "pnpm run build:cjs:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "npm run build:esm:watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.esm.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:esm:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.esm.json -w --preserveWatchOutput",
              "runCommand": "pnpm run build:esm:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:types": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:types"
            },
            "metadata": {
              "scriptContent": "tsc --declaration --emitDeclarationOnly --declarationMap --declarationDir dist/types -p tsconfig.json",
              "runCommand": "pnpm run build:types"
            },
            "configurations": {},
            "parallelism": true
          },
          "storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "storybook"
            },
            "metadata": {
              "scriptContent": "storybook dev -p 6006",
              "runCommand": "pnpm run storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "build-storybook": {
            "executor": "nx:run-script",
            "metadata": {
              "scriptContent": "storybook build",
              "runCommand": "pnpm run build-storybook"
            },
            "dependsOn": [
              "^build"
            ],
            "outputs": [
              "{projectRoot}/storybook-static"
            ],
            "inputs": [
              "{projectRoot}/.storybook",
              "{projectRoot}/src"
            ],
            "options": {
              "script": "build-storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "vitest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/framework": {
      "name": "@khulnasoft/framework",
      "type": "lib",
      "data": {
        "root": "packages/framework",
        "sourceRoot": "packages/framework",
        "name": "@khulnasoft/framework",
        "tags": [
          "npm:public",
          "npm:khulnasoft",
          "npm:code-first",
          "npm:workflows",
          "npm:durable",
          "npm:sdk",
          "npm:notifications",
          "npm:email",
          "npm:sms",
          "npm:push",
          "npm:webhooks",
          "npm:next",
          "npm:nuxt",
          "npm:h3",
          "npm:express",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "test",
              "test:watch",
              "lint",
              "lint:fix",
              "format",
              "format:fix",
              "build",
              "build:watch",
              "postbuild",
              "check:exports",
              "check:circulars",
              "bump:prerelease",
              "release:alpha",
              "devtool"
            ]
          },
          "description": "The Code-First Notifications Workflow SDK.",
          "js": {
            "packageName": "@khulnasoft/framework",
            "packageExports": {
              ".": {
                "require": {
                  "types": "./dist/cjs/index.d.cts",
                  "default": "./dist/cjs/index.cjs"
                },
                "import": {
                  "types": "./dist/esm/index.d.ts",
                  "default": "./dist/esm/index.js"
                }
              },
              "./express": {
                "require": {
                  "types": "./dist/cjs/servers/express.d.cts",
                  "default": "./dist/cjs/servers/express.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/express.d.ts",
                  "default": "./dist/esm/servers/express.js"
                }
              },
              "./nest": {
                "require": {
                  "types": "./dist/cjs/servers/nest.d.cts",
                  "default": "./dist/cjs/servers/nest.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/nest.d.ts",
                  "default": "./dist/esm/servers/nest.js"
                }
              },
              "./next": {
                "require": {
                  "types": "./dist/cjs/servers/next.d.cts",
                  "default": "./dist/cjs/servers/next.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/next.d.ts",
                  "default": "./dist/esm/servers/next.js"
                }
              },
              "./nuxt": {
                "require": {
                  "types": "./dist/cjs/servers/nuxt.d.cts",
                  "default": "./dist/cjs/servers/nuxt.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/nuxt.d.ts",
                  "default": "./dist/esm/servers/nuxt.js"
                }
              },
              "./h3": {
                "require": {
                  "types": "./dist/cjs/servers/h3.d.cts",
                  "default": "./dist/cjs/servers/h3.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/h3.d.ts",
                  "default": "./dist/esm/servers/h3.js"
                }
              },
              "./lambda": {
                "require": {
                  "types": "./dist/cjs/servers/lambda.d.cts",
                  "default": "./dist/cjs/servers/lambda.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/lambda.d.ts",
                  "default": "./dist/esm/servers/lambda.js"
                }
              },
              "./sveltekit": {
                "require": {
                  "types": "./dist/cjs/servers/sveltekit.d.cts",
                  "default": "./dist/cjs/servers/sveltekit.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/sveltekit.d.ts",
                  "default": "./dist/esm/servers/sveltekit.js"
                }
              },
              "./remix": {
                "require": {
                  "types": "./dist/cjs/servers/remix.d.cts",
                  "default": "./dist/cjs/servers/remix.cjs"
                },
                "import": {
                  "types": "./dist/esm/servers/remix.d.ts",
                  "default": "./dist/esm/servers/remix.js"
                }
              },
              "./internal": {
                "require": {
                  "types": "./dist/cjs/internal/index.d.cts",
                  "default": "./dist/cjs/internal/index.cjs"
                },
                "import": {
                  "types": "./dist/esm/internal/index.d.ts",
                  "default": "./dist/esm/internal/index.js"
                }
              }
            }
          }
        },
        "targets": {
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "vitest --typecheck",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "vitest --typecheck --watch",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --check --ignore-path .gitignore .",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "format:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "format:fix"
            },
            "metadata": {
              "scriptContent": "prettier --write --ignore-path .gitignore .",
              "runCommand": "pnpm run format:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "NODE_ENV=production tsup",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "tsup --watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "postbuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "postbuild"
            },
            "metadata": {
              "scriptContent": "pnpm run check:exports && pnpm check:circulars",
              "runCommand": "pnpm run postbuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "check:exports": {
            "executor": "nx:run-script",
            "options": {
              "script": "check:exports"
            },
            "metadata": {
              "scriptContent": "attw --pack .",
              "runCommand": "pnpm run check:exports"
            },
            "configurations": {},
            "parallelism": true
          },
          "check:circulars": {
            "executor": "nx:run-script",
            "options": {
              "script": "check:circulars"
            },
            "metadata": {
              "scriptContent": "madge --circular --extensions ts ./src",
              "runCommand": "pnpm run check:circulars"
            },
            "configurations": {},
            "parallelism": true
          },
          "bump:prerelease": {
            "executor": "nx:run-script",
            "options": {
              "script": "bump:prerelease"
            },
            "metadata": {
              "scriptContent": "npm version prerelease --preid=alpha & PID=$!; (sleep 1 && kill -9 $PID) & wait $PID",
              "runCommand": "pnpm run bump:prerelease"
            },
            "configurations": {},
            "parallelism": true
          },
          "release:alpha": {
            "executor": "nx:run-script",
            "options": {
              "script": "release:alpha"
            },
            "metadata": {
              "scriptContent": "pnpm bump:prerelease || pnpm build && npm publish",
              "runCommand": "pnpm run release:alpha"
            },
            "configurations": {},
            "parallelism": true
          },
          "devtool": {
            "executor": "nx:run-script",
            "options": {
              "script": "devtool"
            },
            "metadata": {
              "scriptContent": "tsx ./scripts/devtool.ts",
              "runCommand": "pnpm run devtool"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/notifications": {
      "name": "@khulnasoft/notifications",
      "type": "lib",
      "data": {
        "root": "libs/notifications",
        "sourceRoot": "libs/notifications",
        "name": "@khulnasoft/notifications",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "build",
              "build:main",
              "build:module",
              "fix",
              "fix:prettier",
              "fix:lint",
              "test",
              "lint",
              "test:watch",
              "watch:build",
              "reset-hard",
              "start:studio"
            ]
          },
          "description": "Khulnasoft notification templates and workflows",
          "js": {
            "packageName": "@khulnasoft/notifications"
          }
        },
        "targets": {
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "run-p build:*",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:main": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:main"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:main"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:module": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:module"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.module.json",
              "runCommand": "pnpm run build:module"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:lint"
            },
            "metadata": {
              "scriptContent": "eslint src --ext .ts --fix",
              "runCommand": "pnpm run fix:lint"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo 'Not tests available'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "echo 'Not tests available'",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:studio": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:studio"
            },
            "metadata": {
              "scriptContent": "khulnasoft dev --port 3000 --route /v1/bridge/khulnasoft",
              "runCommand": "pnpm run start:studio"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/providers": {
      "name": "@khulnasoft/providers",
      "type": "lib",
      "data": {
        "root": "packages/providers",
        "sourceRoot": "packages/providers",
        "name": "@khulnasoft/providers",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "prebuild",
              "build",
              "build:esm",
              "build:cjs",
              "lint:fix",
              "lint",
              "test",
              "watch:build",
              "watch:test",
              "reset-hard",
              "prepare-release"
            ]
          },
          "description": "Khulnasoft Provider Wrappers",
          "js": {
            "packageName": "@khulnasoft/providers"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run watch:build",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run build:cjs && npm run build:esm",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.esm.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:cjs": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:cjs"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "vitest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "vitest",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && yarn",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare-release": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare-release"
            },
            "metadata": {
              "scriptContent": "run-s reset-hard test",
              "runCommand": "pnpm run prepare-release"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/stateless": {
      "name": "@khulnasoft/stateless",
      "type": "lib",
      "data": {
        "root": "packages/stateless",
        "sourceRoot": "packages/stateless",
        "name": "@khulnasoft/stateless",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "start:dev",
              "prebuild",
              "build",
              "build:cjs",
              "build:esm",
              "fix",
              "fix:prettier",
              "lint:fix",
              "test",
              "lint",
              "test:prettier",
              "test:unit",
              "check-cli",
              "check-integration-tests",
              "diff-integration-tests",
              "watch:build",
              "watch:test",
              "doc",
              "doc:html",
              "doc:json",
              "doc:publish",
              "reset-hard",
              "prepare-release"
            ]
          },
          "description": "Notification Management Framework",
          "js": {
            "packageName": "@khulnasoft/stateless"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "npm run watch:build",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run build:cjs && npm run build:esm",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:cjs": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:cjs"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.esm.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "run-s test:*",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\"",
              "runCommand": "pnpm run test:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:unit": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:unit"
            },
            "metadata": {
              "scriptContent": "jest src",
              "runCommand": "pnpm run test:unit"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-cli": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-cli"
            },
            "metadata": {
              "scriptContent": "run-s test diff-integration-tests check-integration-tests",
              "runCommand": "pnpm run check-cli"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-integration-tests": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-integration-tests"
            },
            "metadata": {
              "scriptContent": "run-s check-integration-test:*",
              "runCommand": "pnpm run check-integration-tests"
            },
            "configurations": {},
            "parallelism": true
          },
          "diff-integration-tests": {
            "executor": "nx:run-script",
            "options": {
              "script": "diff-integration-tests"
            },
            "metadata": {
              "scriptContent": "mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'",
              "runCommand": "pnpm run diff-integration-tests"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "jest src --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc"
            },
            "metadata": {
              "scriptContent": "run-s doc:html && open-cli build/docs/index.html",
              "runCommand": "pnpm run doc"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:html": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:html"
            },
            "metadata": {
              "scriptContent": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
              "runCommand": "pnpm run doc:html"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:json": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:json"
            },
            "metadata": {
              "scriptContent": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
              "runCommand": "pnpm run doc:json"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:publish": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:publish"
            },
            "metadata": {
              "scriptContent": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
              "runCommand": "pnpm run doc:publish"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare-release": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare-release"
            },
            "metadata": {
              "scriptContent": "run-s reset-hard test",
              "runCommand": "pnpm run prepare-release"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/api": {
      "name": "@khulnasoft/api",
      "type": "lib",
      "data": {
        "root": "libs/internal-sdk",
        "sourceRoot": "libs/internal-sdk",
        "name": "@khulnasoft/api",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "lint",
              "build",
              "prepublishOnly"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/api"
          }
        },
        "targets": {
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint --cache --max-warnings=0 src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsc",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "prepublishOnly": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepublishOnly"
            },
            "metadata": {
              "scriptContent": "npm run build",
              "runCommand": "pnpm run prepublishOnly"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/headless": {
      "name": "@khulnasoft/headless",
      "type": "lib",
      "data": {
        "root": "packages/headless",
        "sourceRoot": "packages/headless",
        "name": "@khulnasoft/headless",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "start:dev",
              "build",
              "lint",
              "fix",
              "fix:prettier",
              "lint:fix",
              "test",
              "test:watch"
            ]
          },
          "description": "Headless client package that is a thin abstraction layer over the API client + state and socket management",
          "js": {
            "packageName": "@khulnasoft/headless"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "npm run watch:build",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "jest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "jest --watch",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/inbound-mail": {
      "name": "@khulnasoft/inbound-mail",
      "type": "lib",
      "data": {
        "root": "apps/inbound-mail",
        "sourceRoot": "apps/inbound-mail",
        "name": "@khulnasoft/inbound-mail",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "docker:build",
              "format",
              "start",
              "start:dev",
              "start:test",
              "start:debug",
              "start:prod",
              "lint",
              "test"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/inbound-mail"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/inbound-mail/Dockerfile | BULL_MQ_PRO_NPM_TOKEN=${BULL_MQ_PRO_NPM_TOKEN} docker buildx build --secret id=BULL_MQ_PRO_NPM_TOKEN --build-arg PACKAGE_PATH=apps/inbound-mail --load -t khulnasoft-inbound-mail - $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "nodemon",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "nodemon",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test nodemon",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:debug"
            },
            "metadata": {
              "scriptContent": "nest start --debug --watch",
              "runCommand": "pnpm run start:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:prod"
            },
            "metadata": {
              "scriptContent": "node dist/main",
              "runCommand": "pnpm run start:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --trace-warnings --timeout 10000 --require ts-node/register --exit --file e2e/setup.ts src/**/**/*.spec.ts",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          }
        },
        "implicitDependencies": []
      }
    },
    "nestjs": {
      "name": "nestjs",
      "type": "lib",
      "data": {
        "root": "playground/nestjs",
        "sourceRoot": "playground/nestjs",
        "name": "nestjs",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "build",
              "dev",
              "dev:debug",
              "start",
              "lint",
              "lint:fix",
              "test",
              "test:debug"
            ]
          },
          "description": "",
          "js": {
            "packageName": "nestjs"
          }
        },
        "targets": {
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "nest build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "dev"
            },
            "metadata": {
              "scriptContent": "nest start --watch",
              "runCommand": "pnpm run dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "dev:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "dev:debug"
            },
            "metadata": {
              "scriptContent": "nest start --debug --watch",
              "runCommand": "pnpm run dev:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "node dist/main",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint \"{src,test}/**/*.ts\"",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "vitest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:debug"
            },
            "metadata": {
              "scriptContent": "vitest --inspect-brk --no-file-parallelism",
              "runCommand": "pnpm run test:debug"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "nextjs": {
      "name": "nextjs",
      "type": "lib",
      "data": {
        "root": "playground/nextjs",
        "sourceRoot": "playground/nextjs",
        "name": "nextjs",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "dev",
              "build",
              "start",
              "lint"
            ]
          },
          "js": {
            "packageName": "nextjs"
          }
        },
        "targets": {
          "dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "dev"
            },
            "metadata": {
              "scriptContent": "next dev -p 4011",
              "runCommand": "pnpm run dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "next build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "next start",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "next lint",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/khulnasofti": {
      "name": "@khulnasoft/khulnasofti",
      "type": "lib",
      "data": {
        "root": "libs/khulnasofti",
        "sourceRoot": "libs/khulnasofti",
        "name": "@khulnasoft/khulnasofti",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "dev",
              "start",
              "setup",
              "prepare:lib",
              "prepare:panda",
              "prepare:audit",
              "clean",
              "prebuild",
              "lint",
              "lint:fix",
              "build",
              "build:watch",
              "build:storybook",
              "storybook",
              "studio",
              "audit-components"
            ]
          },
          "description": "Khulnasoft's Design System & Component Library",
          "js": {
            "packageName": "@khulnasoft/khulnasofti",
            "packageExports": {
              ".": {
                "source": "./src/index.ts",
                "types": "./dist/index.d.ts",
                "import": "./dist/index.js"
              },
              "./icons": {
                "source": "./src/icons/index.ts",
                "types": "./dist/icons/index.d.ts",
                "require": "./dist/icons/index.js",
                "import": "./dist/icons/index.js"
              },
              "./css": {
                "types": "./styled-system/css/index.d.ts",
                "require": "./styled-system/css/index.js",
                "import": "./styled-system/css/index.js"
              },
              "./tokens": {
                "types": "./styled-system/tokens/index.d.ts",
                "require": "./styled-system/tokens/index.js",
                "import": "./styled-system/tokens/index.js"
              },
              "./types": {
                "types": "./styled-system/types/index.d.ts",
                "require": "./styled-system/types/index.js",
                "import": "./styled-system/types/index.js"
              },
              "./patterns": {
                "types": "./styled-system/patterns/index.d.ts",
                "require": "./styled-system/patterns/index.js",
                "import": "./styled-system/patterns/index.js"
              },
              "./recipes": {
                "types": "./styled-system/recipes/index.d.ts",
                "require": "./styled-system/recipes/index.js",
                "import": "./styled-system/recipes/index.js"
              },
              "./jsx": {
                "types": "./styled-system/jsx/index.d.ts",
                "require": "./styled-system/jsx/index.js",
                "import": "./styled-system/jsx/index.js"
              },
              "./styles.css": "./src/index.css"
            }
          }
        },
        "targets": {
          "dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "dev"
            },
            "metadata": {
              "scriptContent": "pnpm build && pnpm storybook",
              "runCommand": "pnpm run dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run build:watch",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "setup": {
            "executor": "nx:run-script",
            "options": {
              "script": "setup"
            },
            "metadata": {
              "scriptContent": "pnpm prepare:panda && pnpm build",
              "runCommand": "pnpm run setup"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare:lib": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare:lib"
            },
            "metadata": {
              "scriptContent": "pnpm prepare:panda && pnpm prepare:audit",
              "runCommand": "pnpm run prepare:lib"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare:panda": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare:panda"
            },
            "metadata": {
              "scriptContent": "pnpm panda codegen",
              "runCommand": "pnpm run prepare:panda"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare:audit": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare:audit"
            },
            "metadata": {
              "scriptContent": "pnpm audit-components",
              "runCommand": "pnpm run prepare:audit"
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-script",
            "options": {
              "script": "clean"
            },
            "metadata": {
              "scriptContent": "rimraf dist styled-system",
              "runCommand": "pnpm run clean"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "pnpm prepare:panda",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "pnpm panda --watch & cross-env node_modules/.bin/tsc -w --preserveWatchOutput",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:storybook"
            },
            "metadata": {
              "scriptContent": "pnpm panda && storybook build",
              "runCommand": "pnpm run build:storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "storybook"
            },
            "metadata": {
              "scriptContent": "pnpm panda --watch & storybook dev -p 6006",
              "runCommand": "pnpm run storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "studio": {
            "executor": "nx:run-script",
            "options": {
              "script": "studio"
            },
            "metadata": {
              "scriptContent": "pnpm panda studio",
              "runCommand": "pnpm run studio"
            },
            "configurations": {},
            "parallelism": true
          },
          "audit-components": {
            "executor": "nx:run-script",
            "options": {
              "script": "audit-components"
            },
            "metadata": {
              "scriptContent": "pnpm react-scanner -c './react-scanner.config.js'",
              "runCommand": "pnpm run audit-components"
            },
            "configurations": {},
            "parallelism": true
          },
          "build-storybook": {
            "dependsOn": [
              "^build"
            ],
            "outputs": [
              "{projectRoot}/storybook-static"
            ],
            "inputs": [
              "{projectRoot}/.storybook",
              "{projectRoot}/src"
            ],
            "configurations": {},
            "options": {},
            "parallelism": true,
            "executor": "nx:noop"
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/client": {
      "name": "@khulnasoft/client",
      "type": "lib",
      "data": {
        "root": "packages/client",
        "sourceRoot": "packages/client",
        "name": "@khulnasoft/client",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "start:dev",
              "prebuild",
              "build",
              "build:esm",
              "build:cjs",
              "fix",
              "fix:prettier",
              "lint:fix",
              "test",
              "lint",
              "test:prettier",
              "test:unit",
              "check-cli",
              "check-integration-tests",
              "diff-integration-tests",
              "watch:build",
              "watch:test",
              "doc",
              "doc:html",
              "doc:json",
              "doc:publish",
              "reset-hard",
              "prepare-release"
            ]
          },
          "description": "API client to be used in end user environments",
          "js": {
            "packageName": "@khulnasoft/client"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "npm run watch:build",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run build:cjs && npm run build:esm",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.esm.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:cjs": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json",
              "runCommand": "pnpm run build:cjs"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo \"No tests yet, build tests only\"",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\"",
              "runCommand": "pnpm run test:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:unit": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:unit"
            },
            "metadata": {
              "scriptContent": "jest src",
              "runCommand": "pnpm run test:unit"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-cli": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-cli"
            },
            "metadata": {
              "scriptContent": "run-s test diff-integration-tests check-integration-tests",
              "runCommand": "pnpm run check-cli"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-integration-tests": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-integration-tests"
            },
            "metadata": {
              "scriptContent": "run-s check-integration-test:*",
              "runCommand": "pnpm run check-integration-tests"
            },
            "configurations": {},
            "parallelism": true
          },
          "diff-integration-tests": {
            "executor": "nx:run-script",
            "options": {
              "script": "diff-integration-tests"
            },
            "metadata": {
              "scriptContent": "mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'",
              "runCommand": "pnpm run diff-integration-tests"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "jest src --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc"
            },
            "metadata": {
              "scriptContent": "run-s doc:html && open-cli build/docs/index.html",
              "runCommand": "pnpm run doc"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:html": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:html"
            },
            "metadata": {
              "scriptContent": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
              "runCommand": "pnpm run doc:html"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:json": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:json"
            },
            "metadata": {
              "scriptContent": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
              "runCommand": "pnpm run doc:json"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:publish": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:publish"
            },
            "metadata": {
              "scriptContent": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
              "runCommand": "pnpm run doc:publish"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare-release": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare-release"
            },
            "metadata": {
              "scriptContent": "run-s reset-hard test",
              "runCommand": "pnpm run prepare-release"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/nextjs": {
      "name": "@khulnasoft/nextjs",
      "type": "lib",
      "data": {
        "root": "packages/nextjs",
        "sourceRoot": "packages/nextjs",
        "name": "@khulnasoft/nextjs",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "build:watch",
              "build",
              "lint",
              "check-exports"
            ]
          },
          "description": "Khulnasoft <Inbox /> Next.js SDK",
          "js": {
            "packageName": "@khulnasoft/nextjs",
            "packageExports": {
              ".": {
                "import": {
                  "types": "./dist/client/index.d.ts",
                  "react-server": "./dist/app-router/esm/index.js",
                  "default": "./dist/client/esm/index.js"
                },
                "require": {
                  "types": "./dist/client/index.d.ts",
                  "react-server": "./dist/app-router/index.js",
                  "default": "./dist/client/index.js"
                }
              },
              "./hooks": {
                "import": {
                  "types": "./dist/hooks/index.d.ts",
                  "default": "./dist/hooks/esm/index.js"
                },
                "require": {
                  "types": "./dist/hooks/index.d.ts",
                  "default": "./dist/hooks/index.js"
                }
              },
              "./themes": {
                "import": {
                  "types": "./dist/themes/index.d.ts",
                  "default": "./dist/themes/esm/index.js"
                },
                "require": {
                  "types": "./dist/themes/index.d.ts",
                  "default": "./dist/themes/index.js"
                }
              }
            }
          }
        },
        "targets": {
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "tsup --watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsup && pnpm run check-exports",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "check-exports": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-exports"
            },
            "metadata": {
              "scriptContent": "attw --pack . --profile node16 --ignore-rules unexpected-module-syntax",
              "runCommand": "pnpm run check-exports"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/shared": {
      "name": "@khulnasoft/shared",
      "type": "lib",
      "data": {
        "root": "packages/shared",
        "sourceRoot": "packages/shared",
        "name": "@khulnasoft/shared",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "afterinstall",
              "prebuild",
              "build",
              "build:esm",
              "build:cjs",
              "build:watch",
              "postbuild",
              "start:dev",
              "precommit",
              "lint",
              "lint:fix",
              "test",
              "watch:test",
              "check:circulars"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/shared",
            "packageExports": {
              ".": {
                "require": "./dist/cjs/index.js",
                "import": "./dist/esm/index.js",
                "types": "./dist/esm/index.d.js"
              },
              "./utils": {
                "require": "./dist/cjs/utils/index.js",
                "import": "./dist/esm/utils/index.js",
                "types": "./dist/esm/utils/index.d.js"
              }
            }
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "afterinstall": {
            "executor": "nx:run-script",
            "options": {
              "script": "afterinstall"
            },
            "metadata": {
              "scriptContent": "pnpm build",
              "runCommand": "pnpm run afterinstall"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "npm run build:cjs && npm run build:esm",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:esm": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:esm"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.esm.json",
              "runCommand": "pnpm run build:esm"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:cjs": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:cjs"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:cjs"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.json -w --preserveWatchOutput",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "postbuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "postbuild"
            },
            "metadata": {
              "scriptContent": "npm run check:circulars",
              "runCommand": "pnpm run postbuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "pnpm build:watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "vitest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "pnpm test --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "check:circulars": {
            "executor": "nx:run-script",
            "options": {
              "script": "check:circulars"
            },
            "metadata": {
              "scriptContent": "madge --circular --extensions ts ./src",
              "runCommand": "pnpm run check:circulars"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "automation": {
      "name": "automation",
      "type": "lib",
      "data": {
        "root": "libs/automation",
        "sourceRoot": "src",
        "name": "automation",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "generate:provider",
              "lint:fix"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/automation"
          }
        },
        "targets": {
          "generate:provider": {
            "executor": "nx:run-script",
            "options": {
              "script": "generate:provider"
            },
            "metadata": {
              "scriptContent": "pnpm nx g automation:provider",
              "runCommand": "pnpm run generate:provider"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "options": {
              "lintFilePatterns": [
                "./src",
                "./package.json",
                "generators.json"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "cache": true,
            "inputs": [
              "default",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "$schema": "node_modules/nx/schemas/project-schema.json",
        "projectType": "library",
        "release": {
          "version": {
            "generatorOptions": {
              "packageRoot": "dist/{projectRoot}",
              "currentVersionResolver": "git-tag"
            }
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/dashboard": {
      "name": "@khulnasoft/dashboard",
      "type": "lib",
      "data": {
        "root": "apps/dashboard",
        "sourceRoot": "apps/dashboard",
        "name": "@khulnasoft/dashboard",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "start:test",
              "start:static:build",
              "dev",
              "build",
              "lint",
              "preview",
              "test:e2e",
              "test:e2e:ui",
              "test:e2e:debug",
              "test:e2e:install",
              "test:e2e:codegen",
              "test:e2e:show-report",
              "test:e2e:merge-report"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/dashboard"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "vite",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "vite --mode test",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:static:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:static:build"
            },
            "metadata": {
              "scriptContent": "http-server dist -p 4201 --proxy http://127.0.0.1:4201?",
              "runCommand": "pnpm run start:static:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "dev"
            },
            "metadata": {
              "scriptContent": "pnpm start",
              "runCommand": "pnpm run dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsc -b && vite build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint .",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "preview": {
            "executor": "nx:run-script",
            "options": {
              "script": "preview"
            },
            "metadata": {
              "scriptContent": "vite preview",
              "runCommand": "pnpm run preview"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e"
            },
            "metadata": {
              "scriptContent": "playwright test",
              "runCommand": "pnpm run test:e2e"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:ui": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:ui"
            },
            "metadata": {
              "scriptContent": "playwright test --ui",
              "runCommand": "pnpm run test:e2e:ui"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:debug"
            },
            "metadata": {
              "scriptContent": "playwright test --debug",
              "runCommand": "pnpm run test:e2e:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:install": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:install"
            },
            "metadata": {
              "scriptContent": "playwright install --with-deps",
              "runCommand": "pnpm run test:e2e:install"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:codegen": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:codegen"
            },
            "metadata": {
              "scriptContent": "playwright codegen",
              "runCommand": "pnpm run test:e2e:codegen"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:show-report": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:show-report"
            },
            "metadata": {
              "scriptContent": "npx playwright show-report",
              "runCommand": "pnpm run test:e2e:show-report"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:merge-report": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:merge-report"
            },
            "metadata": {
              "scriptContent": "playwright merge-reports --reporter html",
              "runCommand": "pnpm run test:e2e:merge-report"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/react": {
      "name": "@khulnasoft/react",
      "type": "lib",
      "data": {
        "root": "packages/react",
        "sourceRoot": "packages/react",
        "name": "@khulnasoft/react",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "build:watch",
              "build",
              "lint",
              "check-exports"
            ]
          },
          "description": "Khulnasoft <Inbox /> React SDK",
          "js": {
            "packageName": "@khulnasoft/react",
            "packageExports": {
              ".": {
                "browser": {
                  "import": {
                    "types": "./dist/client/components/index.d.mts",
                    "default": "./dist/client/components/index.mjs"
                  },
                  "require": {
                    "types": "./dist/client/components/index.d.ts",
                    "default": "./dist/client/components/index.js"
                  }
                },
                "import": {
                  "types": "./dist/client/components/index.d.mts",
                  "default": "./dist/server/index.mjs"
                },
                "require": {
                  "types": "./dist/client/components/index.d.ts",
                  "default": "./dist/server/index.js"
                }
              },
              "./hooks": {
                "import": {
                  "types": "./dist/client/hooks/index.d.mts",
                  "default": "./dist/client/hooks/index.mjs"
                },
                "require": {
                  "types": "./dist/client/hooks/index.d.ts",
                  "default": "./dist/client/hooks/index.js"
                }
              },
              "./themes": {
                "import": {
                  "types": "./dist/client/themes/index.d.mts",
                  "default": "./dist/client/themes/index.mjs"
                },
                "require": {
                  "types": "./dist/client/themes/index.d.ts",
                  "default": "./dist/client/themes/index.js"
                }
              }
            }
          }
        },
        "targets": {
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "tsup --watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsup && pnpm run check-exports",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "check-exports": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-exports"
            },
            "metadata": {
              "scriptContent": "attw --pack .",
              "runCommand": "pnpm run check-exports"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/nest": {
      "name": "@khulnasoft/nest",
      "type": "lib",
      "data": {
        "root": "packages/nest",
        "sourceRoot": "packages/nest",
        "name": "@khulnasoft/nest",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "build:main",
              "build:module",
              "fix",
              "fix:prettier",
              "lint:fix",
              "test",
              "lint",
              "test:unit",
              "watch:build",
              "watch:test",
              "reset-hard",
              "prepare-release"
            ]
          },
          "description": "A nestjs wrapper for khulnasoft",
          "js": {
            "packageName": "@khulnasoft/nest"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "run-p build:*",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:main": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:main"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:main"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:module": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:module"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.module.json",
              "runCommand": "pnpm run build:module"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix"
            },
            "metadata": {
              "scriptContent": "run-s fix:*",
              "runCommand": "pnpm run fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "fix:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "fix:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run fix:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "run-s test:*",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:unit": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:unit"
            },
            "metadata": {
              "scriptContent": "echo \"No unit tests\"",
              "runCommand": "pnpm run test:unit"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "jest src --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare-release": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare-release"
            },
            "metadata": {
              "scriptContent": "run-s reset-hard test",
              "runCommand": "pnpm run prepare-release"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/node": {
      "name": "@khulnasoft/node",
      "type": "lib",
      "data": {
        "root": "packages/node",
        "sourceRoot": "packages/node",
        "name": "@khulnasoft/node",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "start:dev",
              "prebuild",
              "build",
              "build:main",
              "build:module",
              "test",
              "lint",
              "lint:eslint",
              "lint:prettier",
              "check-cli",
              "check-integration-tests",
              "diff-integration-tests",
              "watch:build",
              "watch:test",
              "doc",
              "doc:html",
              "doc:json",
              "doc:publish",
              "reset-hard",
              "prepare-release"
            ]
          },
          "description": "Notification Management Framework",
          "js": {
            "packageName": "@khulnasoft/node"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "npm run watch:build",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "run-p build:*",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:main": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:main"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json",
              "runCommand": "pnpm run build:main"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:module": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:module"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.module.json",
              "runCommand": "pnpm run build:module"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "jest src",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "run-s lint:*",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:eslint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:eslint"
            },
            "metadata": {
              "scriptContent": "eslint src --fix",
              "runCommand": "pnpm run lint:eslint"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:prettier": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:prettier"
            },
            "metadata": {
              "scriptContent": "prettier \"src/**/*.ts\" --write",
              "runCommand": "pnpm run lint:prettier"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-cli": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-cli"
            },
            "metadata": {
              "scriptContent": "run-s test diff-integration-tests check-integration-tests",
              "runCommand": "pnpm run check-cli"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-integration-tests": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-integration-tests"
            },
            "metadata": {
              "scriptContent": "run-s check-integration-test:*",
              "runCommand": "pnpm run check-integration-tests"
            },
            "configurations": {},
            "parallelism": true
          },
          "diff-integration-tests": {
            "executor": "nx:run-script",
            "options": {
              "script": "diff-integration-tests"
            },
            "metadata": {
              "scriptContent": "mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'",
              "runCommand": "pnpm run diff-integration-tests"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:build"
            },
            "metadata": {
              "scriptContent": "tsc -p tsconfig.json -w",
              "runCommand": "pnpm run watch:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "watch:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "watch:test"
            },
            "metadata": {
              "scriptContent": "jest src --watch",
              "runCommand": "pnpm run watch:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc"
            },
            "metadata": {
              "scriptContent": "run-s doc:html && open-cli build/docs/index.html",
              "runCommand": "pnpm run doc"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:html": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:html"
            },
            "metadata": {
              "scriptContent": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
              "runCommand": "pnpm run doc:html"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:json": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:json"
            },
            "metadata": {
              "scriptContent": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
              "runCommand": "pnpm run doc:json"
            },
            "configurations": {},
            "parallelism": true
          },
          "doc:publish": {
            "executor": "nx:run-script",
            "options": {
              "script": "doc:publish"
            },
            "metadata": {
              "scriptContent": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
              "runCommand": "pnpm run doc:publish"
            },
            "configurations": {},
            "parallelism": true
          },
          "reset-hard": {
            "executor": "nx:run-script",
            "options": {
              "script": "reset-hard"
            },
            "metadata": {
              "scriptContent": "git clean -dfx && git reset --hard && pnpm install",
              "runCommand": "pnpm run reset-hard"
            },
            "configurations": {},
            "parallelism": true
          },
          "prepare-release": {
            "executor": "nx:run-script",
            "options": {
              "script": "prepare-release"
            },
            "metadata": {
              "scriptContent": "run-s reset-hard test",
              "runCommand": "pnpm run prepare-release"
            },
            "configurations": {},
            "parallelism": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/testing": {
      "name": "@khulnasoft/testing",
      "type": "lib",
      "data": {
        "root": "libs/testing",
        "sourceRoot": "libs/testing",
        "name": "@khulnasoft/testing",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "afterinstall",
              "prebuild",
              "build",
              "build:watch",
              "start:dev",
              "precommit",
              "lint",
              "lint:fix",
              "test",
              "test:watch"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/testing"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "afterinstall": {
            "executor": "nx:run-script",
            "options": {
              "script": "afterinstall"
            },
            "metadata": {
              "scriptContent": "pnpm build",
              "runCommand": "pnpm run afterinstall"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json -w --preserveWatchOutput",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "pnpm build:watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo \"no tests yet\"",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/webhook": {
      "name": "@khulnasoft/webhook",
      "type": "lib",
      "data": {
        "root": "apps/webhook",
        "sourceRoot": "apps/webhook",
        "name": "@khulnasoft/webhook",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "docker:build",
              "docker:build:depot",
              "format",
              "start",
              "start:dev",
              "start:test",
              "start:debug",
              "start:prod",
              "lint",
              "lint:fix",
              "test:e2e"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/webhook"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "nest build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/webhook/Dockerfile | docker buildx build --load --build-arg PACKAGE_PATH=apps/webhook - -t khulnasoft-webhook $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build:depot": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build:depot"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/webhook/Dockerfile | depot build --build-arg PACKAGE_PATH=apps/webhook - -t khulnasoft-webhook --load",
              "runCommand": "pnpm run docker:build:depot"
            },
            "configurations": {},
            "parallelism": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "pnpm start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "nest start --watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test nest start",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:debug"
            },
            "metadata": {
              "scriptContent": "nest start --debug --watch",
              "runCommand": "pnpm run start:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:prod"
            },
            "metadata": {
              "scriptContent": "node dist/main",
              "runCommand": "pnpm run start:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file e2e/setup.ts e2e/**/*.e2e.ts src/**/*.e2e.ts",
              "runCommand": "pnpm run test:e2e"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/js": {
      "name": "@khulnasoft/js",
      "type": "lib",
      "data": {
        "root": "packages/js",
        "sourceRoot": "packages/js",
        "name": "@khulnasoft/js",
        "tags": [
          "npm:public",
          "type:package"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "clean",
              "start:server",
              "build",
              "postbuild",
              "build:umd",
              "build:watch",
              "tsup:watch",
              "check-exports",
              "lint",
              "lint:fix",
              "test"
            ]
          },
          "description": "Khulnasoft JavaScript SDK for <Inbox />",
          "js": {
            "packageName": "@khulnasoft/js",
            "packageExports": {
              ".": {
                "import": {
                  "types": "./dist/esm/index.d.mts",
                  "default": "./dist/esm/index.mjs"
                },
                "require": {
                  "types": "./dist/cjs/index.d.ts",
                  "default": "./dist/cjs/index.js"
                }
              },
              "./ui": {
                "import": {
                  "types": "./dist/esm/ui/index.d.mts",
                  "default": "./dist/esm/ui/index.mjs"
                },
                "require": {
                  "types": "./dist/cjs/ui/index.d.ts",
                  "default": "./dist/cjs/ui/index.js"
                }
              },
              "./themes": {
                "import": {
                  "types": "./dist/esm/themes/index.d.mts",
                  "default": "./dist/esm/themes/index.mjs"
                },
                "require": {
                  "types": "./dist/cjs/themes/index.d.ts",
                  "default": "./dist/cjs/themes/index.js"
                }
              },
              "./internal": {
                "import": {
                  "types": "./dist/esm/internal/index.d.mts",
                  "default": "./dist/esm/internal/index.mjs"
                },
                "require": {
                  "types": "./dist/cjs/internal/index.d.ts",
                  "default": "./dist/cjs/internal/index.js"
                }
              }
            }
          }
        },
        "targets": {
          "clean": {
            "executor": "nx:run-script",
            "options": {
              "script": "clean"
            },
            "metadata": {
              "scriptContent": "rimraf ./dist",
              "runCommand": "pnpm run clean"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:server": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:server"
            },
            "metadata": {
              "scriptContent": "http-server ./dist -p 4010",
              "runCommand": "pnpm run start:server"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "pnpm run clean && NODE_ENV=production tsup",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "postbuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "postbuild"
            },
            "metadata": {
              "scriptContent": "./scripts/copy-package-json.sh && node scripts/size-limit.mjs && pnpm run check-exports",
              "runCommand": "pnpm run postbuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:umd": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:umd"
            },
            "metadata": {
              "scriptContent": "webpack --config webpack.config.cjs",
              "runCommand": "pnpm run build:umd"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "concurrently \"NODE_ENV=development pnpm run tsup:watch\" \"pnpm run start:server\"",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "tsup:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "tsup:watch"
            },
            "metadata": {
              "scriptContent": "tsup --watch",
              "runCommand": "pnpm run tsup:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-exports": {
            "executor": "nx:run-script",
            "options": {
              "script": "check-exports"
            },
            "metadata": {
              "scriptContent": "attw --pack .",
              "runCommand": "pnpm run check-exports"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "jest",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/widget": {
      "name": "@khulnasoft/widget",
      "type": "lib",
      "data": {
        "root": "apps/widget",
        "sourceRoot": "apps/widget",
        "name": "@khulnasoft/widget",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "start:dev",
              "start:cli:local",
              "start:test",
              "envsetup",
              "envsetup:docker",
              "start:static:build",
              "start:docker",
              "docker:build",
              "docker:build:depot",
              "prebuild",
              "build",
              "precommit",
              "lint",
              "cypress:run",
              "cypress:open",
              "start:shell:test",
              "start:shell:embed",
              "start:api"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/widget"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "DISABLE_ESLINT_PLUGIN=true react-app-rewired start",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "cross-env PORT=4500 pnpm start",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:cli:local": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:cli:local"
            },
            "metadata": {
              "scriptContent": "pnpm start:shell:test & pnpm start:shell:embed & cross-env PORT=3500 pnpm start",
              "runCommand": "pnpm run start:cli:local"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "pnpm start:shell:test & pnpm start:shell:embed & cross-env NODE_ENV=test REACT_APP_API_URL=http://127.0.0.1:1336 REACT_APP_WS_URL=http://127.0.0.1:1340 PORT=3500 pnpm start",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "envsetup": {
            "executor": "nx:run-script",
            "options": {
              "script": "envsetup"
            },
            "metadata": {
              "scriptContent": "chmod +x ./env.sh && ./env.sh && mv env-config.js ./public/env-config.js",
              "runCommand": "pnpm run envsetup"
            },
            "configurations": {},
            "parallelism": true
          },
          "envsetup:docker": {
            "executor": "nx:run-script",
            "options": {
              "script": "envsetup:docker"
            },
            "metadata": {
              "scriptContent": "chmod +x ./env.sh && ./env.sh && mv ./env-config.js ./build/env-config.js",
              "runCommand": "pnpm run envsetup:docker"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:static:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:static:build"
            },
            "metadata": {
              "scriptContent": "pnpm envsetup:docker && http-server build -p 4500 --proxy http://127.0.0.1:4500?",
              "runCommand": "pnpm run start:static:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:docker": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:docker"
            },
            "metadata": {
              "scriptContent": "pnpm build && pnpm start:static:build",
              "runCommand": "pnpm run start:docker"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "docker buildx build -f ./Dockerfile --load -t khulnasoft-widget ./../.. $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build:depot": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build:depot"
            },
            "metadata": {
              "scriptContent": "depot build -f ./Dockerfile -t khulnasoft-widget ./../.. --load",
              "runCommand": "pnpm run docker:build:depot"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_OPTIONS=--max_old_space_size=4096 DISABLE_ESLINT_PLUGIN=true react-app-rewired --max_old_space_size=4096 build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "cypress:run": {
            "executor": "nx:run-script",
            "options": {
              "script": "cypress:run"
            },
            "metadata": {
              "scriptContent": "cypress run",
              "runCommand": "pnpm run cypress:run"
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress:open": {
            "executor": "nx:run-script",
            "options": {
              "script": "cypress:open"
            },
            "metadata": {
              "scriptContent": "cypress open",
              "runCommand": "pnpm run cypress:open"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:shell:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:shell:test"
            },
            "metadata": {
              "scriptContent": "http-server . -p 4700",
              "runCommand": "pnpm run start:shell:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:shell:embed": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:shell:embed"
            },
            "metadata": {
              "scriptContent": "http-server ../../libs/embed/dist -p 4702",
              "runCommand": "pnpm run start:shell:embed"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:api": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:api"
            },
            "metadata": {
              "scriptContent": "cd ../../ && pnpm run start:api:test",
              "runCommand": "pnpm run start:api"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/worker": {
      "name": "@khulnasoft/worker",
      "type": "lib",
      "data": {
        "root": "apps/worker",
        "sourceRoot": "apps/worker",
        "name": "@khulnasoft/worker",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "format",
              "docker:build",
              "docker:build:depot",
              "start",
              "start:dev",
              "start:test",
              "start:debug",
              "start:prod",
              "lint",
              "lint:fix",
              "test",
              "test:e2e"
            ]
          },
          "description": "description",
          "js": {
            "packageName": "@khulnasoft/worker"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "nest build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --write \"src/**/*.ts\"",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/worker/Dockerfile | BULL_MQ_PRO_NPM_TOKEN=${BULL_MQ_PRO_NPM_TOKEN} docker buildx build --secret id=BULL_MQ_PRO_NPM_TOKEN --build-arg PACKAGE_PATH=apps/worker - -t khulnasoft-worker --load $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build:depot": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build:depot"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/worker/Dockerfile | depot build --build-arg PACKAGE_PATH=apps/worker - -t khulnasoft-worker --load",
              "runCommand": "pnpm run docker:build:depot"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "pnpm start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "nest start --watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test nest start",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:debug"
            },
            "metadata": {
              "scriptContent": "nest start --debug --watch",
              "runCommand": "pnpm run start:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:prod"
            },
            "metadata": {
              "scriptContent": "node dist/main.js",
              "runCommand": "pnpm run start:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file e2e/setup.ts src/**/**/*.spec.ts",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:e2e": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file e2e/setup.ts src/**/*.e2e.ts",
              "runCommand": "pnpm run test:e2e"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/embed": {
      "name": "@khulnasoft/embed",
      "type": "lib",
      "data": {
        "root": "libs/embed",
        "sourceRoot": "libs/embed",
        "name": "@khulnasoft/embed",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "lint",
              "lint:fix",
              "prebuild",
              "build",
              "build:dev",
              "build:prod",
              "start",
              "start:dev",
              "start:docker",
              "start:test:web",
              "docker:build",
              "docker:build:depot",
              "test",
              "test:watch",
              "test:prod",
              "commit",
              "precommit"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/embed"
          }
        },
        "targets": {
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "tsc && cross-env ENVIRONMENT=local rollup -c rollup.config.js",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:dev"
            },
            "metadata": {
              "scriptContent": "tsc && cross-env ENVIRONMENT=dev rollup -c rollup.config.js",
              "runCommand": "pnpm run build:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:prod"
            },
            "metadata": {
              "scriptContent": "tsc && cross-env ENVIRONMENT=production rollup -c rollup.config.js",
              "runCommand": "pnpm run build:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "cross-env ENVIRONMENT=local rollup -c rollup.config.js -w",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "concurrently \"pnpm start\"",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:docker": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:docker"
            },
            "metadata": {
              "scriptContent": "pnpm build && http-server -p 4701 dist",
              "runCommand": "pnpm run start:docker"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test:web": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test:web"
            },
            "metadata": {
              "scriptContent": "http-server -p 4701 -o test",
              "runCommand": "pnpm run start:test:web"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "docker buildx build --load -f ./Dockerfile -t khulnasoft-embed ./../.. $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build:depot": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build:depot"
            },
            "metadata": {
              "scriptContent": "depot build -f ./Dockerfile -t khulnasoft-embed ./../.. --load",
              "runCommand": "pnpm run docker:build:depot"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo \"Error: no test specified\"",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "jest --coverage --watch",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:prod"
            },
            "metadata": {
              "scriptContent": "pnpm lint && pnpm test -- --no-cache",
              "runCommand": "pnpm run test:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "commit": {
            "executor": "nx:run-script",
            "options": {
              "script": "commit"
            },
            "metadata": {
              "scriptContent": "git-cz",
              "runCommand": "pnpm run commit"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/api-service": {
      "name": "@khulnasoft/api-service",
      "type": "lib",
      "data": {
        "root": "apps/api",
        "sourceRoot": "apps/api",
        "name": "@khulnasoft/api-service",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "build:generate",
              "build:watch",
              "format",
              "docker:build",
              "docker:build:depot",
              "start",
              "start:dev",
              "start:test",
              "start:debug",
              "start:prod",
              "build:metadata",
              "lint",
              "lint:fix",
              "lint:openapi",
              "pretest",
              "generate:swagger",
              "generate:sdk",
              "test",
              "test:e2e:khulnasoft-v0",
              "test:e2e:khulnasoft-v2",
              "migration",
              "link:submodules",
              "admin:remove-user-account",
              "admin:remove-organization"
            ]
          },
          "description": "description",
          "js": {
            "packageName": "@khulnasoft/api-service"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "pnpm build:metadata && nest build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:generate": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:generate"
            },
            "metadata": {
              "scriptContent": "pnpm build:metadata && nest build && pnpm generate:swagger && pnpm generate:sdk",
              "runCommand": "pnpm run build:generate"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "pnpm build:metadata && nest build --watch",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --write \"src/**/*.ts\"",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/api/Dockerfile | BULL_MQ_PRO_NPM_TOKEN=${BULL_MQ_PRO_NPM_TOKEN} docker buildx build --load -t khulnasoft-api --secret id=BULL_MQ_PRO_NPM_TOKEN --build-arg PACKAGE_PATH=apps/api - $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build:depot": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build:depot"
            },
            "metadata": {
              "scriptContent": "pnpm --silent --workspace-root pnpm-context -- apps/api/Dockerfile | depot build --build-arg PACKAGE_PATH=apps/api - -t khulnasoft-api --load",
              "runCommand": "pnpm run docker:build:depot"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "pnpm start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "nest start --watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test nest start",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:debug"
            },
            "metadata": {
              "scriptContent": "nest start --debug",
              "runCommand": "pnpm run start:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:prod"
            },
            "metadata": {
              "scriptContent": "node dist/main.js",
              "runCommand": "pnpm run start:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "build:metadata": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:metadata"
            },
            "metadata": {
              "scriptContent": "cross-env ts-node scripts/generate-metadata.ts",
              "runCommand": "pnpm run build:metadata"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint:openapi": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:openapi"
            },
            "metadata": {
              "scriptContent": "spectral lint http://127.0.0.1:${PORT:-3000}/openapi.yaml",
              "runCommand": "pnpm run lint:openapi"
            },
            "configurations": {},
            "parallelism": true
          },
          "pretest": {
            "executor": "nx:run-script",
            "options": {
              "script": "pretest"
            },
            "metadata": {
              "scriptContent": "pnpm build:metadata",
              "runCommand": "pnpm run pretest"
            },
            "configurations": {},
            "parallelism": true
          },
          "generate:swagger": {
            "executor": "nx:run-script",
            "options": {
              "script": "generate:swagger"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test ts-node exportOpenAPIJSON.ts",
              "runCommand": "pnpm run generate:swagger"
            },
            "configurations": {},
            "parallelism": true
          },
          "generate:sdk": {
            "executor": "nx:run-script",
            "options": {
              "script": "generate:sdk"
            },
            "metadata": {
              "scriptContent": " (cd ../../libs/internal-sdk && speakeasy run --skip-compile --minimal --skip-versioning) && (cd ../../libs/internal-sdk && pnpm build) ",
              "runCommand": "pnpm run generate:sdk"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 5000 --require ts-node/register --exit 'src/**/*.spec.ts'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:e2e:khulnasoft-v0": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:khulnasoft-v0"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 5000 --retries 3 --grep '#khulnasoft-v0' --require ts-node/register --exit --file e2e/setup.ts src/**/*.e2e{,-ee}.ts",
              "runCommand": "pnpm run test:e2e:khulnasoft-v0"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:khulnasoft-v2": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:khulnasoft-v2"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test CI_EE_TEST=true CLERK_ENABLED=true NODE_OPTIONS=--max_old_space_size=8192 mocha --bail --timeout 5000 --retries 3 --grep '#khulnasoft-v2' --require ts-node/register --exit --file e2e/setup.ts src/**/*.e2e{,-ee}.ts",
              "runCommand": "pnpm run test:e2e:khulnasoft-v2"
            },
            "configurations": {},
            "parallelism": true
          },
          "migration": {
            "executor": "nx:run-script",
            "options": {
              "script": "migration"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=local MIGRATION=true ts-node --transpileOnly",
              "runCommand": "pnpm run migration"
            },
            "configurations": {},
            "parallelism": true
          },
          "link:submodules": {
            "executor": "nx:run-script",
            "options": {
              "script": "link:submodules"
            },
            "metadata": {
              "scriptContent": "pnpm link ../../enterprise/packages/auth && pnpm link ../../enterprise/packages/translation && pnpm link ../../enterprise/packages/billing",
              "runCommand": "pnpm run link:submodules"
            },
            "configurations": {},
            "parallelism": true
          },
          "admin:remove-user-account": {
            "executor": "nx:run-script",
            "options": {
              "script": "admin:remove-user-account"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=local MIGRATION=true ts-node --transpileOnly ./admin/remove-user-account.ts",
              "runCommand": "pnpm run admin:remove-user-account"
            },
            "configurations": {},
            "parallelism": true
          },
          "admin:remove-organization": {
            "executor": "nx:run-script",
            "options": {
              "script": "admin:remove-organization"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=local MIGRATION=true ts-node --transpileOnly ./admin/remove-organization.ts",
              "runCommand": "pnpm run admin:remove-organization"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/dal": {
      "name": "@khulnasoft/dal",
      "type": "lib",
      "data": {
        "root": "libs/dal",
        "sourceRoot": "libs/dal",
        "name": "@khulnasoft/dal",
        "tags": [
          "npm:private"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "afterinstall",
              "prebuild",
              "build",
              "build:watch",
              "start:dev",
              "precommit",
              "lint",
              "lint:fix",
              "test",
              "test:watch"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/dal"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "npm run start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "afterinstall": {
            "executor": "nx:run-script",
            "options": {
              "script": "afterinstall"
            },
            "metadata": {
              "scriptContent": "pnpm build",
              "runCommand": "pnpm run afterinstall"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:watch"
            },
            "metadata": {
              "scriptContent": "cross-env node_modules/.bin/tsc -p tsconfig.build.json -w --preserveWatchOutput",
              "runCommand": "pnpm run build:watch"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "pnpm build:watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "echo \"No test specified\"",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "test:watch": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:watch"
            },
            "metadata": {
              "scriptContent": "",
              "runCommand": "pnpm run test:watch"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/web": {
      "name": "@khulnasoft/web",
      "type": "lib",
      "data": {
        "root": "apps/web",
        "sourceRoot": "apps/web",
        "name": "@khulnasoft/web",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "start",
              "prebuild",
              "build",
              "build:test",
              "precommit",
              "docker:build",
              "docker:build:depot",
              "envsetup:docker",
              "envsetup",
              "start:static:build",
              "start:docker",
              "start:dev",
              "start:test",
              "start:test:e2e",
              "test:e2e",
              "test:e2e:ui",
              "test:e2e:debug",
              "test:e2e:install",
              "test:e2e:codegen",
              "test:e2e:show-report",
              "test:e2e:merge-report",
              "storybook",
              "build-storybook",
              "lint",
              "lint:fix",
              "link:submodules"
            ]
          },
          "js": {
            "packageName": "@khulnasoft/web"
          }
        },
        "targets": {
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "pnpm panda --watch & cross-env NODE_OPTIONS=--max_old_space_size=8192 DISABLE_ESLINT_PLUGIN=true PORT=4200 react-app-rewired start",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf build",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "pnpm panda && cross-env NODE_OPTIONS=--max_old_space_size=4096 GENERATE_SOURCEMAP=false DISABLE_ESLINT_PLUGIN=true react-app-rewired --max_old_space_size=4096 build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "build:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "build:test"
            },
            "metadata": {
              "scriptContent": "pnpm panda && cross-env REACT_APP_HUBSPOT_EMBED=44416662 REACT_APP_API_URL=http://127.0.0.1:1336 NODE_OPTIONS=--max_old_space_size=4096 GENERATE_SOURCEMAP=false DISABLE_ESLINT_PLUGIN=true react-app-rewired --max_old_space_size=4096 build",
              "runCommand": "pnpm run build:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "precommit": {
            "executor": "nx:run-script",
            "options": {
              "script": "precommit"
            },
            "metadata": {
              "scriptContent": "lint-staged",
              "runCommand": "pnpm run precommit"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "docker buildx build --load -f ./Dockerfile -t khulnasoft-web ./../.. $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "docker:build:depot": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build:depot"
            },
            "metadata": {
              "scriptContent": "depot build -f ./Dockerfile -t khulnasoft-web ./../.. --load",
              "runCommand": "pnpm run docker:build:depot"
            },
            "configurations": {},
            "parallelism": true
          },
          "envsetup:docker": {
            "executor": "nx:run-script",
            "options": {
              "script": "envsetup:docker"
            },
            "metadata": {
              "scriptContent": "chmod +x ./env.sh && ./env.sh && mv ./env-config.js ./build/env-config.js",
              "runCommand": "pnpm run envsetup:docker"
            },
            "configurations": {},
            "parallelism": true
          },
          "envsetup": {
            "executor": "nx:run-script",
            "options": {
              "script": "envsetup"
            },
            "metadata": {
              "scriptContent": "chmod +x ./env.sh && ./env.sh && mv env-config.js ./public/env-config.js",
              "runCommand": "pnpm run envsetup"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:static:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:static:build"
            },
            "metadata": {
              "scriptContent": "http-server build -p 4200 --proxy http://127.0.0.1:4200?",
              "runCommand": "pnpm run start:static:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:docker": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:docker"
            },
            "metadata": {
              "scriptContent": "pnpm build && pnpm start:static:build",
              "runCommand": "pnpm run start:docker"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "pnpm start",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "http-server build -p 4200 --proxy http://127.0.0.1:4200?",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test:e2e": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test:e2e"
            },
            "metadata": {
              "scriptContent": "KHULNASOFT_ENTERPRISE=true REACT_APP_API_URL=http://127.0.0.1:1336 pnpm start",
              "runCommand": "pnpm run start:test:e2e"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e"
            },
            "metadata": {
              "scriptContent": "KHULNASOFT_ENTERPRISE=true playwright test",
              "runCommand": "pnpm run test:e2e"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:ui": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:ui"
            },
            "metadata": {
              "scriptContent": "KHULNASOFT_ENTERPRISE=true playwright test --ui",
              "runCommand": "pnpm run test:e2e:ui"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:debug"
            },
            "metadata": {
              "scriptContent": "KHULNASOFT_ENTERPRISE=true playwright test --debug",
              "runCommand": "pnpm run test:e2e:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:install": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:install"
            },
            "metadata": {
              "scriptContent": "playwright install --with-deps",
              "runCommand": "pnpm run test:e2e:install"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:codegen": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:codegen"
            },
            "metadata": {
              "scriptContent": "playwright codegen",
              "runCommand": "pnpm run test:e2e:codegen"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:show-report": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:show-report"
            },
            "metadata": {
              "scriptContent": "npx playwright show-report",
              "runCommand": "pnpm run test:e2e:show-report"
            },
            "configurations": {},
            "parallelism": true
          },
          "test:e2e:merge-report": {
            "executor": "nx:run-script",
            "options": {
              "script": "test:e2e:merge-report"
            },
            "metadata": {
              "scriptContent": "playwright merge-reports --reporter html",
              "runCommand": "pnpm run test:e2e:merge-report"
            },
            "configurations": {},
            "parallelism": true
          },
          "storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "storybook"
            },
            "metadata": {
              "scriptContent": "storybook dev -p 6006 -s public",
              "runCommand": "pnpm run storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "build-storybook": {
            "executor": "nx:run-script",
            "options": {
              "script": "build-storybook"
            },
            "metadata": {
              "scriptContent": "storybook build -s public",
              "runCommand": "pnpm run build-storybook"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "link:submodules": {
            "executor": "nx:run-script",
            "options": {
              "script": "link:submodules"
            },
            "metadata": {
              "scriptContent": "pnpm link ../../enterprise/packages/translation-web && pnpm link ../../enterprise/packages/billing-web",
              "runCommand": "pnpm run link:submodules"
            },
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "@khulnasoft/ws": {
      "name": "@khulnasoft/ws",
      "type": "lib",
      "data": {
        "root": "apps/ws",
        "sourceRoot": "apps/ws",
        "name": "@khulnasoft/ws",
        "tags": [
          "npm:private",
          "type:app"
        ],
        "metadata": {
          "targetGroups": {
            "NPM Scripts": [
              "prebuild",
              "build",
              "docker:build",
              "format",
              "start",
              "start:dev",
              "start:test",
              "start:debug",
              "start:prod",
              "lint",
              "lint:fix",
              "test"
            ]
          },
          "description": "",
          "js": {
            "packageName": "@khulnasoft/ws"
          }
        },
        "targets": {
          "prebuild": {
            "executor": "nx:run-script",
            "options": {
              "script": "prebuild"
            },
            "metadata": {
              "scriptContent": "rimraf dist",
              "runCommand": "pnpm run prebuild"
            },
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "nx:run-script",
            "options": {
              "script": "build"
            },
            "metadata": {
              "scriptContent": "nest build",
              "runCommand": "pnpm run build"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "cache": true
          },
          "docker:build": {
            "executor": "nx:run-script",
            "options": {
              "script": "docker:build"
            },
            "metadata": {
              "scriptContent": "BULL_MQ_PRO_NPM_TOKEN=${BULL_MQ_PRO_NPM_TOKEN} docker buildx build --secret id=BULL_MQ_PRO_NPM_TOKEN -f ./Dockerfile -t khulnasoft-ws ./../.. --load $DOCKER_BUILD_ARGUMENTS",
              "runCommand": "pnpm run docker:build"
            },
            "configurations": {},
            "parallelism": true
          },
          "format": {
            "executor": "nx:run-script",
            "options": {
              "script": "format"
            },
            "metadata": {
              "scriptContent": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
              "runCommand": "pnpm run format"
            },
            "configurations": {},
            "parallelism": true
          },
          "start": {
            "executor": "nx:run-script",
            "options": {
              "script": "start"
            },
            "metadata": {
              "scriptContent": "pnpm start:dev",
              "runCommand": "pnpm run start"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:dev": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:dev"
            },
            "metadata": {
              "scriptContent": "nest start --watch",
              "runCommand": "pnpm run start:dev"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:test": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:test"
            },
            "metadata": {
              "scriptContent": "cross-env NODE_ENV=test nest start",
              "runCommand": "pnpm run start:test"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:debug": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:debug"
            },
            "metadata": {
              "scriptContent": "nest start --debug --watch",
              "runCommand": "pnpm run start:debug"
            },
            "configurations": {},
            "parallelism": true
          },
          "start:prod": {
            "executor": "nx:run-script",
            "options": {
              "script": "start:prod"
            },
            "metadata": {
              "scriptContent": "node dist/main.js",
              "runCommand": "pnpm run start:prod"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint"
            },
            "metadata": {
              "scriptContent": "eslint src",
              "runCommand": "pnpm run lint"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          },
          "lint:fix": {
            "executor": "nx:run-script",
            "options": {
              "script": "lint:fix"
            },
            "metadata": {
              "scriptContent": "pnpm lint -- --fix",
              "runCommand": "pnpm run lint:fix"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "nx:run-script",
            "options": {
              "script": "test"
            },
            "metadata": {
              "scriptContent": "cross-env TS_NODE_COMPILER_OPTIONS='{\"strictNullChecks\": false}' NODE_ENV=test mocha --timeout 10000 --require ts-node/register --exit --file e2e/setup.ts './src/**/*.spec.ts'",
              "runCommand": "pnpm run test"
            },
            "configurations": {},
            "parallelism": true,
            "cache": true
          }
        },
        "implicitDependencies": []
      }
    }
  },
  "externalNodes": {},
  "dependencies": {
    "@khulnasoft/ee-shared-services": [
      {
        "source": "@khulnasoft/ee-shared-services",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-shared-services",
        "target": "@khulnasoft/ee-dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-shared-services",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/ee-translation": [
      {
        "source": "@khulnasoft/ee-translation",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-translation",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-translation",
        "target": "@khulnasoft/ee-dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-translation",
        "target": "@khulnasoft/ee-auth",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-translation",
        "target": "@khulnasoft/ee-shared-services",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-translation",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/notification-center": [
      {
        "source": "@khulnasoft/notification-center",
        "target": "@khulnasoft/client",
        "type": "static"
      },
      {
        "source": "@khulnasoft/notification-center",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/ee-billing": [
      {
        "source": "@khulnasoft/ee-billing",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-billing",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-billing",
        "target": "@khulnasoft/ee-dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-billing",
        "target": "@khulnasoft/ee-auth",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-billing",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-billing",
        "target": "@khulnasoft/notifications",
        "type": "static"
      }
    ],
    "@repo/typescript-config": [],
    "@khulnasoft/application-generic": [
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/ee-shared-services",
        "type": "static"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/ee-shared-services",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/providers",
        "type": "static"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/stateless",
        "type": "static"
      },
      {
        "source": "@khulnasoft/application-generic",
        "target": "@khulnasoft/testing",
        "type": "static"
      }
    ],
    "@khulnasoft/ee-auth": [
      {
        "source": "@khulnasoft/ee-auth",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-auth",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-auth",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/ee-dal": [
      {
        "source": "@khulnasoft/ee-dal",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ee-dal",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@repo/eslint-config": [],
    "@khulnasoft/react-native": [
      {
        "source": "@khulnasoft/react-native",
        "target": "@khulnasoft/react",
        "type": "static"
      }
    ],
    "@khulnasoft/ntfr-client": [],
    "khulnasoft": [
      {
        "source": "khulnasoft",
        "target": "@khulnasoft/ntfr-client",
        "type": "static"
      },
      {
        "source": "khulnasoft",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "khulnasoft",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "khulnasoft",
        "target": "@khulnasoft/js",
        "type": "static"
      },
      {
        "source": "khulnasoft",
        "target": "@khulnasoft/nextjs",
        "type": "static"
      }
    ],
    "@khulnasoft/design-system": [
      {
        "source": "@khulnasoft/design-system",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/framework": [],
    "@khulnasoft/notifications": [
      {
        "source": "@khulnasoft/notifications",
        "target": "khulnasoft",
        "type": "static"
      },
      {
        "source": "@khulnasoft/notifications",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "@khulnasoft/notifications",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/providers": [
      {
        "source": "@khulnasoft/providers",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/providers",
        "target": "@khulnasoft/stateless",
        "type": "static"
      }
    ],
    "@khulnasoft/stateless": [],
    "@khulnasoft/api": [],
    "@khulnasoft/headless": [
      {
        "source": "@khulnasoft/headless",
        "target": "@khulnasoft/client",
        "type": "static"
      },
      {
        "source": "@khulnasoft/headless",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/inbound-mail": [
      {
        "source": "@khulnasoft/inbound-mail",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/inbound-mail",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/inbound-mail",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "nestjs": [
      {
        "source": "nestjs",
        "target": "@khulnasoft/framework",
        "type": "static"
      }
    ],
    "nextjs": [
      {
        "source": "nextjs",
        "target": "@khulnasoft/nextjs",
        "type": "static"
      },
      {
        "source": "nextjs",
        "target": "@khulnasoft/react",
        "type": "static"
      }
    ],
    "@khulnasoft/khulnasofti": [],
    "@khulnasoft/client": [
      {
        "source": "@khulnasoft/client",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/nextjs": [
      {
        "source": "@khulnasoft/nextjs",
        "target": "@khulnasoft/react",
        "type": "static"
      }
    ],
    "@khulnasoft/shared": [],
    "automation": [],
    "@khulnasoft/dashboard": [
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/web",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/ee-auth",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/api",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/js",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/react",
        "type": "static"
      },
      {
        "source": "@khulnasoft/dashboard",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/react": [
      {
        "source": "@khulnasoft/react",
        "target": "@khulnasoft/js",
        "type": "static"
      }
    ],
    "@khulnasoft/nest": [
      {
        "source": "@khulnasoft/nest",
        "target": "@khulnasoft/stateless",
        "type": "static"
      }
    ],
    "@khulnasoft/node": [
      {
        "source": "@khulnasoft/node",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/testing": [
      {
        "source": "@khulnasoft/testing",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/testing",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/webhook": [
      {
        "source": "@khulnasoft/webhook",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/webhook",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/webhook",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/webhook",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/webhook",
        "target": "@khulnasoft/stateless",
        "type": "static"
      }
    ],
    "@khulnasoft/js": [],
    "@khulnasoft/widget": [
      {
        "source": "@khulnasoft/widget",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/widget",
        "target": "@khulnasoft/notification-center",
        "type": "static"
      },
      {
        "source": "@khulnasoft/widget",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/widget",
        "target": "@khulnasoft/testing",
        "type": "static"
      }
    ],
    "@khulnasoft/worker": [
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/ee-billing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/ee-billing",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/ee-shared-services",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/ee-shared-services",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/ee-translation",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/ee-translation",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/worker",
        "target": "@khulnasoft/stateless",
        "type": "static"
      }
    ],
    "@khulnasoft/embed": [
      {
        "source": "@khulnasoft/embed",
        "target": "@khulnasoft/notification-center",
        "type": "static"
      }
    ],
    "@khulnasoft/api-service": [
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/shared",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/api",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/stateless",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-auth",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-auth",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-billing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-billing",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-shared-services",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-shared-services",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-translation",
        "type": "static"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/ee-translation",
        "type": "dynamic"
      },
      {
        "source": "@khulnasoft/api-service",
        "target": "@khulnasoft/notifications",
        "type": "static"
      }
    ],
    "@khulnasoft/dal": [
      {
        "source": "@khulnasoft/dal",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/web": [
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/design-system",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/framework",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/js",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/notification-center",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/khulnasofti",
        "type": "static"
      },
      {
        "source": "@khulnasoft/web",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ],
    "@khulnasoft/ws": [
      {
        "source": "@khulnasoft/ws",
        "target": "@khulnasoft/dal",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ws",
        "target": "@khulnasoft/testing",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ws",
        "target": "@khulnasoft/application-generic",
        "type": "static"
      },
      {
        "source": "@khulnasoft/ws",
        "target": "@khulnasoft/shared",
        "type": "static"
      }
    ]
  },
  "version": "6.0"
}